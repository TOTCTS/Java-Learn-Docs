import{_ as e}from"./chunks/theme.C3CKf4nb.js";import{_ as r,c as t,o,ah as i}from"./chunks/framework.CY4BpP3U.js";const v=JSON.parse('{"title":"技术图谱与模块总览","description":"","frontmatter":{},"headers":[],"relativePath":"overview.md","filePath":"overview.md"}'),n={name:"overview.md"};function s(p,a,d,l,h,c){return o(),t("div",null,a[0]||(a[0]=[i('<h1 id="技术图谱与模块总览" tabindex="-1">技术图谱与模块总览 <a class="header-anchor" href="#技术图谱与模块总览" aria-label="Permalink to &quot;技术图谱与模块总览&quot;">​</a></h1><p>欢迎来到 Java 全栈学习文档。本页旨在为您提供一个清晰的学习路线图和技术雷达，帮助您理解各项技术在现代软件开发中的定位与关联。</p><h2 id="整体知识图谱" tabindex="-1">整体知识图谱 <a class="header-anchor" href="#整体知识图谱" aria-label="Permalink to &quot;整体知识图谱&quot;">​</a></h2><p>下图展示了从一名 Java 开发者成长为全栈专家的完整学习路径：</p><div style="text-align:center;margin:20px 0;padding:20px;background:#fafbfc;border:1px solid #e1e5e9;border-radius:8px;"><h3 style="margin-bottom:15px;color:#333;">Java 全栈开发学习路径</h3><img src="'+e+'" alt="Java 全栈开发学习路径" style="max-width:100%;height:auto;border-radius:4px;"><p style="margin-top:15px;font-size:14px;color:#666;">按阶段循序渐进，每个阶段都有具体的技术栈和学习目标</p></div><hr><h2 id="各模块介绍" tabindex="-1">各模块介绍 <a class="header-anchor" href="#各模块介绍" aria-label="Permalink to &quot;各模块介绍&quot;">​</a></h2><h3 id="_1-java-核心" tabindex="-1">1. <a href="/java/introduction.html">Java 核心</a> <a class="header-anchor" href="#_1-java-核心" aria-label="Permalink to &quot;1. [Java 核心](/java/introduction)&quot;">​</a></h3><p><strong>定位</strong>：编程语言的基石。</p><p>这是所有后续学习的基础。本模块将深入探讨 Java 语言的底层机制，包括面向对象思想、并发编程、JVM 虚拟机原理以及从 Java 8 到 21 的核心新特性。扎实的 Java 核心功底是您解决复杂问题的关键。</p><h3 id="_2-主流框架-待撰写" tabindex="-1">2. 主流框架 (待撰写) <a class="header-anchor" href="#_2-主流框架-待撰写" aria-label="Permalink to &quot;2. 主流框架 (待撰写)&quot;">​</a></h3><p><strong>定位</strong>：企业级开发的加速器。</p><p>我们将学习以 Spring 全家桶（Spring Boot, Spring Cloud）为核心的现代开发框架。这些框架通过提供诸如 IoC、AOP 等通用解决方案，让开发者能更专注于业务逻辑，极大地提升了开发效率和软件质量。</p><h3 id="_3-数据存储-待撰写" tabindex="-1">3. 数据存储 (待撰写) <a class="header-anchor" href="#_3-数据存储-待撰写" aria-label="Permalink to &quot;3. 数据存储 (待撰写)&quot;">​</a></h3><p><strong>定位</strong>：应用数据的&quot;仓库&quot;。</p><p>任何应用都离不开数据。本模块将涵盖关系型数据库（如 MySQL）、非关系型数据库（如 Redis, MongoDB）的使用和原理，学习如何设计高效的数据库模式、如何利用缓存提升性能。</p><h3 id="_4-分布式组件-待撰写" tabindex="-1">4. 分布式组件 (待撰写) <a class="header-anchor" href="#_4-分布式组件-待撰写" aria-label="Permalink to &quot;4. 分布式组件 (待撰写)&quot;">​</a></h3><p><strong>定位</strong>：构建大规模应用的&quot;粘合剂&quot;。</p><p>在微服务时代，我们需要一系列的中间件来支撑庞大的分布式系统。这里我们将学习消息队列（RabbitMQ, Kafka）以实现系统解耦，学习搜索引擎（Elasticsearch）以提供强大的检索能力。</p><h3 id="_5-工程化与-devops-待撰写" tabindex="-1">5. 工程化与 DevOps (待撰写) <a class="header-anchor" href="#_5-工程化与-devops-待撰写" aria-label="Permalink to &quot;5. 工程化与 DevOps (待撰写)&quot;">​</a></h3><p><strong>定位</strong>：保障软件高质量交付的流程与工具。</p><p>本模块将介绍如何使用 Docker 和 Kubernetes (K8s) 实现应用的容器化部署，如何通过 Git 进行版本控制，以及如何利用 Jenkins 等工具搭建 CI/CD 自动化流水线，完成从代码到产品的最后一公里。</p>',22)]))}const m=r(n,[["render",s]]);export{v as __pageData,m as default};
