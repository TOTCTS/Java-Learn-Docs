<svg xmlns="http://www.w3.org/2000/svg" width="900" height="500" viewBox="0 0 900 500">
    <defs>
        <linearGradient id="grad-panel" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#fafafa;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#f4f4f5;stop-opacity:1" />
        </linearGradient>
        <style>
            .bg { fill: #ffffff; }
            .panel { fill: url(#grad-panel); stroke: #e4e4e7; stroke-width: 1.5; rx: 16; ry: 16; }
            
            .title { font-family: 'Inter', 'Arial', sans-serif; font-size: 18px; font-weight: 600; text-anchor: middle; fill: #18181b; }
            .subtitle { font-family: 'Inter', 'Arial', sans-serif; font-size: 14px; font-weight: 500; text-anchor: middle; fill: #52525b; }
            .op-text { font-family: 'monospace', 'Courier New'; font-size: 14px; text-anchor: middle; fill: #3f3f46; }

            .barrier { stroke: #ef4444; stroke-width: 2.5; stroke-dasharray: 8 4; }
            .barrier-text { font-family: 'Inter', 'Arial', sans-serif; font-size: 13px; font-weight: 600; fill: #dc2626; text-anchor: middle; }

            .volatile-op { fill: #fef2f2; stroke: #fca5a5; stroke-width: 1.5; rx: 8; ry:8; }
            .volatile-text { fill: #b91c1c; font-weight: 600; }
            
            .connector { fill: none; stroke: #a1a1aa; stroke-width: 2; marker-end: url(#arrowhead); }
        </style>
        <marker id="arrowhead" viewBox="0 0 10 10" refX="8" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse">
            <path d="M 0 0 L 10 5 L 0 10 z" fill="#a1a1aa"/>
        </marker>
    </defs>

    <rect x="0" y="0" width="900" height="500" class="bg"/>

    <!-- Left side: Volatile Write -->
    <g transform="translate(225, 250)">
        <rect x="-200" y="-200" width="400" height="400" class="panel"/>
        <text y="-165" class="title">Volatile 写操作</text>
        <text y="-140" class="subtitle">禁止写与其之前的操作重排序</text>

        <path d="M 0 -120 V -80" class="connector" />
        <text y="-100" class="op-text">普通写操作 A</text>
        
        <path d="M 0 -80 V -40" class="connector" />
        <text y="-60" class="op-text">普通写操作 B</text>

        <line x1="-150" y1="-25" x2="150" y2="-25" class="barrier"/>
        <text y="-5" class="barrier-text">StoreStore 内存屏障</text>
        <text y="15" class="barrier-text">(确保屏障前操作完成并可见)</text>
        
        <g transform="translate(0, 50)">
            <rect x="-100" y="0" width="200" height="40" class="volatile-op" />
            <text y="25" class="op-text volatile-text">volatile a = 1;</text>
        </g>
        <path d="M 0 40 V 90" class="connector" />
        
        <line x1="-150" y1="105" x2="150" y2="105" class="barrier"/>
        <text y="125" class="barrier-text">StoreLoad 内存屏障</text>
        
        <path d="M 0 135 V 160" class="connector" />
    </g>

    <!-- Right side: Volatile Read -->
    <g transform="translate(675, 250)">
        <rect x="-200" y="-200" width="400" height="400" class="panel"/>
        <text y="-165" class="title">Volatile 读操作</text>
        <text y="-140" class="subtitle">禁止读与其之后的操作重排序</text>
        
        <path d="M 0 -120 V -80" class="connector" />

        <g transform="translate(0, -65)">
            <rect x="-100" y="0" width="200" height="40" class="volatile-op" />
            <text y="25" class="op-text volatile-text">int b = a;</text>
        </g>
        <path d="M 0 -25 V 15" class="connector" />

        <line x1="-150" y1="30" x2="150" y2="30" class="barrier"/>
        <text y="50" class="barrier-text">LoadLoad &amp; LoadStore 屏障</text>
        <text y="70" class="barrier-text">(确保屏障后操作能看到 a 的新值)</text>
        
        <path d="M 0 80 V 110" class="connector" />
        <text y="100" class="op-text">依赖 b 的操作 C</text>
        
        <path d="M 0 110 V 140" class="connector" />
        <text y="130" class="op-text">依赖 b 的操作 D</text>
        
        <path d="M 0 140 V 160" class="connector" />
    </g>
</svg> 