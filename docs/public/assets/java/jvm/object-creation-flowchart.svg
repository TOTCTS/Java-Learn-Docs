<svg xmlns="http://www.w3.org/2000/svg" width="600" height="800" viewBox="0 0 600 800">
    <defs>
        <linearGradient id="grad-step" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#f9fafb;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#f3f4f6;stop-opacity:1" />
        </linearGradient>
        <linearGradient id="grad-tlab" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style="stop-color:#eff6ff;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#dbeafe;stop-opacity:1" />
        </linearGradient>
        <linearGradient id="grad-cas" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style="stop-color:#f1f5f9;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#e2e8f0;stop-opacity:1" />
        </linearGradient>
        <style>
            .bg { fill: #ffffff; }
            .step-box { fill: url(#grad-step); stroke: #d1d5db; stroke-width: 1.5; rx: 12; ry: 12; }
            .step-text { font-family: 'Inter', 'Arial', sans-serif; font-size: 16px; font-weight: 600; text-anchor: middle; fill: #1f2937; }

            .sub-panel { fill: rgba(249, 250, 251, 0.7); stroke: #d1d5db; stroke-width: 1; rx: 12; ry: 12; stroke-dasharray: 4 4;}
            .sub-panel-title { font-size: 14px; font-weight: 600; fill: #4b5563; text-anchor: middle; }
            .sub-box { rx: 8; ry: 8; stroke-width: 1.2;}
            .tlab-box { fill: url(#grad-tlab); stroke: #93c5fd;}
            .cas-box { fill: url(#grad-cas); stroke: #94a3b8;}
            .sub-text { font-size: 14px; text-anchor: middle; font-weight: 500; }
            .tlab-text { fill: #1e3a8a; }
            .cas-text { fill: #334155; }
            .sub-label { font-size: 12px; text-anchor: middle; fill: #475569; }
            
            .connector { fill: none; stroke: #9ca3af; stroke-width: 2; marker-end: url(#arrowhead); }
            .connector-dashed { fill: none; stroke: #9ca3af; stroke-width: 2; stroke-dasharray: 5 5; marker-end: url(#arrowhead); }
            #arrowhead path { fill: #9ca3af; }
        </style>
        <marker id="arrowhead" viewBox="0 0 10 10" refX="8" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse">
            <path d="M 0 0 L 10 5 L 0 10 z" />
        </marker>
    </defs>

    <rect x="0" y="0" width="600" height="800" class="bg"/>

    <g transform="translate(300, 0)">
        <rect x="-150" y="30" width="300" height="50" class="step-box"/><text y="60" class="step-text">1. 类加载检查</text>
        <path d="M 0 80 v 20" class="connector"/>
        
        <rect x="-150" y="100" width="300" height="50" class="step-box"/><text y="130" class="step-text">2. 内存分配</text>
        <path d="M 0 150 v 20" class="connector"/>
        
        <g transform="translate(0, 170)">
            <rect x="-250" y="0" width="500" height="150" class="sub-panel"/>
            <text x="0" y="25" class="sub-panel-title">并发处理方案</text>
            <rect x="-210" y="50" width="180" height="70" class="sub-box tlab-box"/>
            <text x="-120" y="80" class="sub-text tlab-text">TLAB 分配</text>
            <text x="-120" y="105" class="sub-label">(线程本地, 优先, 无锁)</text>
            <rect x="30" y="50" width="180" height="70" class="sub-box cas-box"/>
            <text x="120" y="80" class="sub-text cas-text">CAS + 失败重试</text>
            <text x="120" y="105" class="sub-label">(全局堆, 备选, 有锁)</text>
            <text x="0" y="90" font-size="16px" font-weight="bold" fill="#4b5563" text-anchor="middle">或</text>
        </g>
        <path d="M 0 320 v 20" class="connector"/>

        <rect x="-150" y="340" width="300" height="50" class="step-box"/><text y="370" class="step-text">3. 零值初始化</text>
        <path d="M 0 390 v 20" class="connector"/>

        <rect x="-150" y="410" width="300" height="50" class="step-box"/><text y="440" class="step-text">4. 对象头设置</text>
        <path d="M 0 460 v 20" class="connector-dashed"/>

        <rect x="-150" y="480" width="300" height="50" class="step-box"/><text y="510" class="step-text">5. 执行 &lt;init&gt;() 方法</text>
    </g>
</svg> 